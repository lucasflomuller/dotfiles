#!/bin/bash
# ~/.bashrc - Bash configuration

# If not running interactively, don't do anything
case $- in
*i*) ;;
*) return ;;
esac

# History settings
HISTCONTROL=ignoreboth
HISTSIZE=10000
HISTFILESIZE=20000
shopt -s histappend

# Check window size after each command
shopt -s checkwinsize

# Make less more friendly for non-text input files
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Set a fancy prompt
PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# Enable color support for ls
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi

# ====== ALIASES ======
# Load shared aliases
if [ -f ~/.aliases ]; then
  source ~/.aliases
fi

# Bash-specific alias for reloading
alias bashconfig='bat ~/.bashrc'
alias bashreload='source ~/.bashrc'

# ====== FUNCTIONS ======
# Utility functions (same as in zshrc)
mkcd() {
  mkdir -p "$1" && cd "$1"
}

# Extract function for various archive formats
extract() {
  if [ -f $1 ]; then
    case $1 in
    *.tar.bz2) tar xjf $1 ;;
    *.tar.gz) tar xzf $1 ;;
    *.bz2) bunzip2 $1 ;;
    *.rar) unrar e $1 ;;
    *.gz) gunzip $1 ;;
    *.tar) tar xf $1 ;;
    *.tbz2) tar xjf $1 ;;
    *.tgz) tar xzf $1 ;;
    *.zip) unzip $1 ;;
    *.Z) uncompress $1 ;;
    *.7z) 7z x $1 ;;
    *) echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# ====== ENVIRONMENT ======
# NVM setup (if you use it with bash too)
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# Starship prompt (if installed)
if command -v starship &>/dev/null; then
  eval "$(starship init bash)"
fi

# Direnv (if installed)
if command -v direnv &>/dev/null; then
  eval "$(direnv hook bash)"
fi

# Homebrew (if installed)
if [ -f "/home/linuxbrew/.linuxbrew/bin/brew" ]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

# Enable bash completion
if [ -f /usr/share/bash-completion/bash_completion ]; then
  . /usr/share/bash-completion/bash_completion
elif [ -f /etc/bash_completion ]; then
  . /etc/bash_completion
fi

# Zoxide setup (if installed)
if command -v zoxide &>/dev/null && [ -z "$DISABLE_ZOXIDE" ]; then
  eval "$(zoxide init bash)"
fi

if command -v exa &>/dev/null && [ -z "$DISABLE_ZOXIED" ]; then
  alias ls='exa -a -l -F --icons --group-directories-first --git --no-permissions --no-user --color=always -h'
fi

echo "ðŸš€ Bash with shared aliases loaded!"
echo "ðŸ’¡ Try: z <dir>, bat <file>, or use any of the configured aliases"

# pnpm
export PNPM_HOME="/home/lucas/.local/share/pnpm"
case ":$PATH:" in
*":$PNPM_HOME:"*) ;;
*) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
export RIPGREP_CONFIG_PATH="/home/lucas/.ripgreprc"
export EDITOR="nvm --remote-silent"
export PATH="$HOME/.tmuxifier/bin:$PATH"
eval "$(tmuxifier init -)"
